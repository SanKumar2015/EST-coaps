<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'[
<!ENTITY RFC2119 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2460 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2460.xml">
<!ENTITY RFC4021 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4021.xml">
<!ENTITY RFC4492 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4492.xml">
<!ENTITY RFC4944 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4944.xml">
<!ENTITY RFC5246 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY RFC5272 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5272.xml">
<!ENTITY RFC5751 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5751.xml">
<!ENTITY RFC5958 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5958.xml">
<!ENTITY RFC5967 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5967.xml">
<!ENTITY RFC6090 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6090.xml">
<!ENTITY RFC6347 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC6690 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6690.xml">
<!ENTITY RFC6838 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6838.xml">
<!ENTITY RFC7030 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7030.xml">
<!ENTITY RFC7230 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC7251 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7251.xml">
<!ENTITY RFC7252 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7252.xml">
<!ENTITY RFC7959 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7959.xml">
<!ENTITY I-D.ietf-anima-bootstrapping-keyinfra SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-anima-bootstrapping-keyinfra.xml">
]>


<?rfc strict="no" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="std" ipr="trust200902" docName="draft-vanderstok-ace-coap-est-00">
  <front>
    <title abbrev="EST-coaps">EST based on DTLS secured CoAP (EST-coaps)</title>
    
    <author initials="S.S." surname="Kumar" fullname="Sandeep S. Kumar">
      <organization>Philips Lighting Research</organization>
      <address>
        <postal>
          <street>High Tech Campus 7</street>
          <city>Eindhoven</city>
          <region></region>
          <code>5656 AE</code>
          <country>NL</country>
        </postal>
        <email>ietf@sandeep.de</email>
      </address>
    </author>
    
  
     <author fullname="Peter van der Stok" initials="P." surname="van der Stok">
      <organization>Consultant</organization>

      <address>
        <email>consultancy@vanderstok.org</email>
      </address>
    </author>
        
    <date/>
    <area>Security</area>
    <workgroup>ace</workgroup>
    <abstract>
      <t>
    Low-resource devices in a Low-power and Lossy Network (LLN) can operate in a mesh network using the IPv6 over Low-power Personal Area Networks (6LoWPAN) and IEEE 802.15.4 link-layer standards. Provisioning these devices in a secure manner with keys (often called security bootstrapping) used to encrypt and authenticate messages is the subject of Bootstrapping of Remote Secure Key Infrastructures (BRSKI) <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>. Enrollment over Secure Transport (EST) <xref target="RFC7030"/>, based on TLS and HTTP, is used for BRSKI. This document defines how low-resource devices are expected to use EST over DTLS and CoAP. 6LoWPAN fragmentation management and minor extensions to CoAP are needed to enable EST over DTLS-secured CoAP (EST-coaps).
      </t>
    </abstract>
<note title="Note">
      <t>
        Many of the concepts in this document are taken over from <xref target="RFC7030"/>. Consequently, much text is directly traceable to <xref target="RFC7030"/>. The same document structure is followed to point out the differences and commonalities between EST and EST-coaps.
      </t>
    </note>

  </front>
  
  
<middle>

<section anchor="intro" title="Introduction">

<t>
IPv6 over Low-power Wireless Personal Area Networks (6LoWPANs) <xref target="RFC4944" /> on IEEE 802.15.4 <xref target="ieee802.15.4" /> wireless networks is becoming common in many professional application domains such as lighting controls. However commissioning of such networks suffers from a lack of standardized  secure bootstrapping mechanisms for these networks.</t>
<t>Although IEEE 802.15.4 defines how security can be enabled between nodes within a single mesh network, it does not specify the provisioning and management of the keys. Therefore securing a 6LoWPAN network with devices from multiple manufacturers with different provisioning techniques is often tedious and time consuming.
</t><t>
Bootstrapping of Remote Secure Infrastructures (BRSKI) <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> addresses the issue of bootstrapping networked devices in the context of Autonomic Networking Integrated Model and Approach (ANIMA). However, BRSKI has not been developed specifically for low-resource devices in constrained networks. These networks use DTLS <xref target="RFC6347"/>, CoAP <xref target="RFC7252"/>, and UDP instead of TLS <xref target="RFC5246"/>, HTTP <xref target="RFC7230"/> and TCP. BRSKI relies on
   Enrollment over Secure Transport (EST) <xref target="RFC7030"/> for the provisioning of the operational domain certificates. Replacing the EST invocations of TLS and HTTP by DTLS and CoAP invocations enables applying BRSKI on CoAP-based low-resource devices.
</t><t>
The <xref target="fig-est-coaps-layers"/> below shows the EST-coaps architecture.
</t>
<figure align="left" title="EST-coaps protocol layers" anchor="fig-est-coaps-layers"><artwork><![CDATA[
+---------------------------------------------------------+
|                                                         |
|    EST request/response messages                        |
|                                                         |
+---------------------------------------------------------+
|                                                         |
|    CoAP for message transfer and signaling              |
|                                                         |
+---------------------------------------------------------+
|                                                         |
|    DTLS for transport security                          |
|                                                         |
+---------------------------------------------------------+
|                                                         |
|    UDP for transport                                    |
|                                                         |
+---------------------------------------------------------+

]]></artwork></figure>

<t>
Although EST-coaps paves the way for the utilization of BRSKI for constrained devices on constrained networks, some devices will not have enough resources to handle the large payloads that come with EST-coaps. It is up to the network designer to decide which devices execute the BRSKI protocol and which not.
</t><t>
EST-coaps is designed for use in professional control networks such as lighting. The autonomic bootstrapping is interesting because it reduces the manual intervention during the commissioning of the network. Typing in passwords is contrary to this wish. Therefore, the password authentication of EST is not supported in EST-coaps. 
</t><t>In the constrained devices context it is very unlikely that full PKI request messages will be used. For that reason, full PKI messages are not supported in EST-coaps.
</t><t>
Because the relatively large messages involved in EST cannot be readily transported over constrained (6LoWPAN, LLN) wireless networks, this document defines the use of CoAP Block-Wise Transfer ("Block") <xref target="RFC7959"/> combined with DTLS to fragment EST messages at the application layer.
</t>

<section title="Terminology">
            <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
            "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
            and "OPTIONAL" in this document are to be interpreted as
            described in <xref target="RFC2119"/>.	    
</t>
<t>All the terminology from EST <xref target="RFC7030"/> is included in this document by reference.</t>

</section>   <!-- Terminology -->

</section>  <!-- Introduction -->


<section anchor="scenario" title="Operational Scenarios Overview">
<t>
Only the differences to EST with respect to operational scenarios are described in this section. EST-coaps server authentication differs from EST as follows:
<list style="symbols">
<t> Replacement of TLS by DTLS and HTTP by CoAP, resulting in:
<list>
<t>DTLS-secured CoAP sessions between EST-coaps client and EST-coaps server.</t>
</list> </t>
<t> Only certificate-based client authentication is supported, with as result:
<list>
<t> The EST-coaps client does not support manual authentication (as described in Section 4.4.1 of <xref target="RFC7030"/>) </t>
<t> The EST-coaps client does not support authentication at the application layer.</t>
</list></t>
<t> EST-coaps does not support full PKI request messages
       <xref target="RFC5272"/>.
</t>
</list>
The following EST-coaps protocol parts are supported as described for the equivalent EST parts:
<list style ="numbers">
<t>Request of client certificates by submitting a enrollment request to EST-coaps server. </t>
<t>Renewal of existing client certificates by submitting a re-enrollment request to EST-coaps server. </t>
<t>Request of certificate with key pair generated by EST-coaps server.</t>
<t> The EST-coaps client can request the attributes needed for enrollment before the enrollment request is issued"</t>
</list>

</t>
</section>  <!-- Operational scenario overview -->

<section anchor="design" title="Protocol Design and Layering">
<t>
The EST-coaps protocol design follows closely the EST design, excluding some aspects that are not relevant for automatic bootstrapping of constrained devices within a professional context. The parts supported by EST-coaps are:
<list style="hanging">
<t hangText="Message types:">
<list style="symbols">
<t>Simple PKI messages.</t>
<t>CA certificate retrieval.</t>
<t>CSR Attributes Request.</t>
<t>Server-generated key request. </t>
</list>
</t>
<t hangText="CoAP with Block-Wise Transfer:">
<list style="symbols">
<t> CoAP Block-Wise Transfer header Options for control of the transfer of larger EST messages.</t>
</list>
</t>
<t hangText="DTLS for transport security:">
<list style="symbols">
<t> Authentication of the EST-coaps server. </t>
<t> Authentication of the EST-coaps client. </t>
<t> Communication integrity and confidentiality.</t>
<t> Channel-binding information for linking proof-of-identity with message-based proof-of-possession (OPTIONAL).
</t>
</list>
</t>
</list>
Given that CoAP and DTLS can provide proof of identity for EST-coaps clients and server, simple PKI messages can be used conformant to section 3.1 of <xref target="RFC5272"/>. EST-coaps supports the certificate types and Trust Anchors (TA) that are specified for EST in section 3 of <xref target="RFC7030"/>.
</t><t>
The EST-coaps server URI is identical to the EST URI (except for replacing the scheme https by coaps): 
</t>
<figure align="left"><artwork><![CDATA[
coaps://www.example.com/.well-known/est 
coaps://www.example.com/.well-known/est/arbitraryLabel1
]]></artwork></figure>
<t>
See Figure 5 in section 3.2.2 of <xref target="RFC7030"/> for the path-suffixes (operations) that are supported by EST.
</t><t>
EST-coaps uses CoAP to transfer EST messages, aided by Block-Wise Transfer <xref target="RFC7959"/> to transport CoAP messages in blocks thus avoiding (excessive) 6LoWPAN fragmentation of UDP datagrams. The use of "Block" is specified in <xref target="fragment"/>.
</t><t> The content-format (media type equivalent) of the CoAP message determines which EST message is transported in the CoAP payload. The media types specified in the HTTP Content-Type header(see section 3.2.2 of <xref target="RFC7030"/>) are in EST-coaps specified by the Content-Format Option (12) of CoAP. The combination of URI path-suffix and content-format used MUST map to an allowed combination of path-suffix and media type as defined for EST. 

</t><t>EST-coaps is designed for use between low-resource devices using CoAP and hence does not need to send base64-encoded data. Simple binary coding is more efficient (30% less payload compared to base64) and well supported by CoAP. Therefore, the content formats specification in <xref target="iana"/> requires the use of binary encoding for all EST-coaps CoAP payloads.
</t><t>
The functions of TLS specified for EST are in EST-coaps mapped to the equivalent DTLS functions. However, DTLS sessions SHOULD remain open for persistent EST-coaps connections to reduce storage load. For example, a cacerts request followed by an enrollments request SHOULD use the same DTLS session.
</t><t> The mandatory cipher suite for DTLS is TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 defined in <xref target="RFC7251"/> which is the mandatory-to-implement cipher suite in CoAP. Additionally the curve secp256r1 MUST be supported <xref target="RFC4492"/>; this curve is equivalent to the NIST P-256 curve. The hash algorithm is SHA-256. DTLS implementations MUST use the Supported Elliptic Curves and Supported Point Formats Extensions <xref target="RFC4492"/>; the uncompressed point format MUST be supported; <xref target="RFC6090"/> can be used as an implementation method.
</t>

<section anchor="error" title="CoAP response codes">
<t>
Section 5.9 of <xref target="RFC7252"/> specifies the mapping of HTTP response codes to CoAP response codes. Every time the HTTP response code 200 is specified in <xref target="RFC7030"/> in response to a GET request, in EST-coaps the equivalent CoAP response code 2.05 MUST be used. Response code HTTP 202 in EST is mapped as indicated below; while other HTTP 2xx response codes are not used by EST. For the following HTTP 4xx error codes that may occur: 400, 401, 403, 404, 405, 406, 412, 413, 415 ; the equivalent CoAP response code for EST-coaps is 4.xx. For the HTTP 5xx error codes: 500, 501, 502, 503, 504 the equivalent CoAP response code is 5.xx. 
</t><t>
HTTP response code 202 needs a different treatment from the one described for <xref target="RFC7030"/>. A new CoAP response code 2.06 is needed. 
When the EST over CoAP request cannot be treated immediately, a CoAP response code 2.06 Delayed is returned with Content-Format: application/link-format described in <xref target="RFC6690"/>. The payload of the response contains a link to receive the delayed response.
ALTERNATIVE (to discuss) : a 2.06 Delayed response without payload and the link to receive the delayed response indicated using the Location-Path and Location-Query Options.
</t><t> The waiting client may send GET requests to the returned link. When the response is not available, the server returns response code 2.06 with again the link for the client to query. When the response is available, the server returns the response code 2.05 Content with a payload containing the requested response in the appropriate content format.
</t>
</section> <!-- CoAP response codes -->

<section anchor="fragment" title="Message fragmentation using Block">
<t>
DTLS defines fragmentation only for the handshake part and not for secure data exchange (DTLS records).
<xref target="RFC6347"/> states "Each DTLS record MUST fit within a single datagram".  In order to avoid using IP fragmentation, which is not supported by 6LoWPAN, invokers of the DTLS record layer MUST size DTLS records so that they fit within any Path MTU estimates obtained from the record layer. In addition, invokers residing on a 6LoWPAN over IEEE 802.15.4 network SHOULD attempt to size CoAP messages such that each DTLS record will fit within one or two IEEE 802.15.4 frames only by choosing the appropriate block sizes.
</t><t>
Certificates can vary greatly in size dependent on signature algorithms and key sizes. For a 256-bit curve, common ECDSA sizes fluctuate between 500 bytes and 1 KB. Some EST messages may be several kilobytes in size. Given non-existence of IP fragmentation in 6LoWPAN networks and its 1280 bytes MTU, EST-coaps needs to be able to fragment EST messages into multiple DTLS datagrams with each DTLS datagram containing a block of CoAP payload data. Further considering the small payload size available to a CoAP message, which can be as low as 68 bytes in case the message needs to fit into a single IEEE 802.15.4 frame, fine-grained fragmentation of EST messages is essential.
</t><t>
For CoAP, <xref target="RFC7959"/> specifies the "Block1" option for fragmentation of the request payload and the "Block2" option for fragmentation of the return payload. The CoAP client MAY specify the Block1 size and MAY also specify the Block2 size. The CoAP server MAY specify the Block2 size, but not the Block1 size.
</t><t>
Examples of fragmented messages are shown in <xref target="example"/>.
</t>
</section> <!-- Message fragmentation -->

<section anchor="messages" title="CoAP message headers">
<t>
EST-coaps uses CoAP payload blocks that each fit in a single DTLS record i.e. UDP datagram without causing IP fragmentation.
The returned CoAP response codes are specified in <xref target="error"/>. The CoAP Token value is not specified by EST-coaps and may be chosen by the CoAP client according to <xref target="RFC7252"/>.
</t><t>
An example HTTP request message cacerts in EST will look like:
</t>
<figure align="left"><artwork><![CDATA[
REQ:
	GET /.well-known/est/cacerts HTTP/1.1
	   Host: 192.0.2.1:8085
	   Accept: */*

RES:
	HTTP/1.1 200 OK
	Status: 200 OK
	Content-Type: application/pkcs7-mime
	Content-Transfer-Encoding : base64
	Content-Length: 4246
	payload
]]></artwork></figure>
<t>
The corresponding EST-coaps request looks like:
</t>
<figure align="left"><artwork><![CDATA[
REQ:
	GET coaps://[192.0.2.1:8085]/.well-known/est/cacerts

RES:
	2.05 Content (Content-Format: application/pkcs7-mime)
	{payload}
]]></artwork></figure>

</section> <!-- CoAP message headers -->


</section> <!-- protocol design and layering -->

<section anchor="exchange" title = "Protocol Exchange Details">
<t>
The EST-coaps client MUST be configured with an implicit TA database or an explicit TA database.  The authentication of the EST-coaps server by the EST-coaps client is based on Certificate authentication in the DTLS handshake. 
</t><t>
The authentication of the EST-coaps client is based on client certificate in the DTLS handshake. This can either be
<list style="symbols">
 <t>DTLS with a previously issued client certificate (e.g., an existing certificate issued by the EST CA); </t>
 <t>DTLS with a previously installed certificate (e.g., manufacturer-
      installed certificate or a certificate issued by some other
      party);</t>
</list>
 
The details on checking the validity of the certificates are identical to EST.
</t><t>
The other protocol aspects such as simple enrollment (re-enrollment), certificate attributes and CA certificate request are similar to EST with the exception that these are performed on coaps (CoAP+DTLS) as the transport. The required content-formats for these request and response messages are defined in <xref target="iana"/>. The CoAP response codes are defined in <xref target="error"/>.
</t><t>
EST-coaps does not support full PKI Requests. Consequently, the fullcmc request of section 4.3 of <xref target="RFC7030"/> and response MUST NOT be supported by EST-coaps.
</t>
</section> <!-- Protocol exchange Details -->

<section anchor="iana" title="IANA Considerations">
<t>
Additions to the sub-registry "CoAP
Content-Formats", within the "CoRE Parameters" registry are needed for the below media types. These can be registered either in the Expert Review range (0-255) or IETF Review range (256-9999).
<list style="numbers">
<t>
<list style ="symbols">
   <t>application/pkcs7-mime</t>

      <t>Type name: application</t>

      <t>Subtype name: pkcs7-mime</t>

      <t>smime-type: certs-only </t>

      <t> ID: TBD1 </t>

      <t>Required parameters: None</t>

      <t>Optional parameters: None </t>

      <t>Encoding considerations: Binary</t>

      <t>Security considerations: As defined in this specification</t>

      <t>Published specification: <xref target="RFC5751"/> </t>

      <t>Applications that use this media type: ANIMA Bootstrap (BRSKI) and EST</t>
</list>
</t>
<t>
<list style ="symbols">
   <t>application/pkcs8</t>

      <t>Type name: application</t>

      <t>Subtype name: pkcs8</t>

      <t> ID: TBD2 </t>

      <t>Required parameters: None</t>

      <t>Optional parameters: None </t>

      <t>Encoding considerations: Binary</t>

      <t>Security considerations: As defined in this specification</t>

      <t>Published specification: <xref target="RFC5958"/> </t>

      <t>Applications that use this media type: ANIMA Bootstrap (BRSKI) and EST</t>
</list>
</t>
<t>
<list style ="symbols">
   <t>application/csrattrs</t>

      <t>Type name: application</t>

      <t>Subtype name: csrattrs</t>

      <t> ID: TBD3 </t>

      <t>Required parameters: None</t>

      <t>Optional parameters: None </t>

      <t>Encoding considerations: Binary</t>

      <t>Security considerations: As defined in this specification</t>

      <t>Published specification: <xref target="RFC7030"/> </t>

      <t>Applications that use this media type: ANIMA Bootstrap (BRSKI) and EST</t>
</list>
</t>

<t>
<list style ="symbols">
   <t>application/pkcs10</t>

      <t>Type name: application</t>

      <t>Subtype name: pkcs10</t>

      <t> ID: TBD4 </t>

      <t>Required parameters: None</t>

      <t>Optional parameters: None </t>

      <t>Encoding considerations: binary</t>

      <t>Security considerations: As defined in this specification</t>

      <t>Published specification: <xref target="RFC5967"/> </t>

      <t>Applications that use this media type: ANIMA bootstrap (BRSKI) and EST</t>
</list>
</t>
</list>

</t><t>
Additions to the sub-registry "CoAP
Response Code", within the "CoRE Parameters" registry are needed for the following response codes:
<list style = "symbols">
<t>Code: 2.06</t>
<t>Description: Delayed </t>
<t>Reference: this document</t>
</list>


</t>
</section>  <!-- IANA consideration -->

<section anchor="sec" title="Security Considerations">
<t>The security considerations mentioned in EST applies also to EST-coaps.  
</t>
</section>  <!-- Security considerations  -->

<section anchor="ack" title="Acknowledgements">
<t> The authors are very grateful to Klaus Hartke for his detailed explanations on the use of Block with DTLS. The authors would like to thank Esko Dijk and Michael Verschoor for the valuable discussions that helped in shaping the solution.
</t>
</section> <!-- Acknowledgements  -->

<section anchor="changes" title="Change Log">
<t>
</t>
</section>

</middle>


<back>
    <references title="Normative References">
     &RFC2119;
     &RFC4492;
     &RFC5272;
     &RFC5751;
     &RFC5958;
	&RFC5967;
     &RFC6090;
     &RFC6347;
     &RFC6690;   
     &RFC7030;
     &RFC7251;
     &RFC7252;
     &RFC7959;
     &I-D.ietf-anima-bootstrapping-keyinfra;

   
    </references>
    <references title="Informative References">
      &RFC4944;
      &RFC5246;
      &RFC6838;
      &RFC7230;
	

<reference anchor="ieee802.15.4">
        <front>
          <title>IEEE Standard 802.15.4-2006</title>

          <author surname="Institute of Electrical and Electronics Engineers">
            <organization></organization>
          </author>

          <date month="" year="2006" />
        </front>
      </reference>


    </references>

<section anchor="example" title="Operational Scenario Example Messages">
<t>
This appendix provides detailed examples of the messages using DTLS and BLOCK option Block2. The minimum PMTU is 1280 bytes, which is the example value assumed for the DTLS datagram size. The example block length is taken as 64 which gives an SZX value of 2.
</t><t>
The following is an example of a valid /cacerts exchange.
</t><t>
During the initial DTLS handshake, the client can ignore the optional server-generated "certificate request" and can instead proceed with the CoAP GET request. The content length of the cacerts response in appendix A.1 of <xref target="RFC7030"/> is 4246 bytes using base64. This leads to a length of 3185 bytes in binary. The CoAP message adds around 10 bytes, the DTLS record 29 bytes. 
</t><t>To avoid IP fragmentation, the CoAP block option is used and an MTU of 127 is assumed to stay within one IEEE 802.15.4 packet. To stay below the MTU of 127, the payload is split in 50 packets with a payload of 64 bytes each. Fifty times the client sends an IPv6 packet containing the UDP datagram with the DTLS record that encapsulates the CoAP Request. The server returns an IPv6 packet containing the UDP datagram with the DTLS record that encapsulates the CoAP response.
</t><t> The CoAP request-response exchange with block option is shown below. Block option is shown in a decomposed way indicating the kind of Block option (2 in this case because used in the response) followed by a colon, and then the block number (NUM), the more bit (M = 0 means last block), and block size exponent (2**(SZX+4)) separated by slashes. The Length 64 is used with SZX= 2 to avoid IP fragmentation.
</t><t> The CoAP Request is sent with confirmable (CON) option and the content format of the Response is /application/cacerts.
</t>
<figure align="left"><artwork><![CDATA[

GET [192.0.2.1:8085]/.well-known/est/cacerts     -->
              <--   (2:0/1/64) 2.05 Content
    GET URI (2:1/1/64)                           -->
              <--   (2:1/1/64) 2.05 Content
                      |
                      |
                      |
     GET URI (2:49/1/64)                         -->
              <--   (2:49/0/64) 2.05 Content

]]></artwork></figure>

</section> <!-- Operational scenario example messages -->

</back>

</rfc>